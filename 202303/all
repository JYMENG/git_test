


<template>
  <div>
    <button @click="downloadExcel">Download Excel</button>
  </div>
</template>

<script>
export default {
  methods: {
    async downloadExcel() {
      const json1 = { /* Your first JSON object */ };
      const json2 = { /* Your second JSON object */ };

      try {
        const response = await fetch('/your-backend-endpoint', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ json1, json2 })
        });

        const excelBlob = await response.blob();
        const url = window.URL.createObjectURL(excelBlob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'combined_data.xlsx';
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
      } catch (error) {
        console.error('Error:', error);
      }
    }
  }
}
</script>
# Backend (Django)
import pandas as pd
from django.http import HttpResponse

def your_backend_endpoint(request):
    if request.method == 'POST':
        data = request.json()  # Assuming JSON payload
        
        # Perform manipulations and combine JSON objects into Excel file
        # Example:
        df1 = pd.DataFrame(data['json1'])
        df2 = pd.DataFrame(data['json2'])
        combined_df = pd.concat([df1, df2], axis=0)
        
        # Convert DataFrame to Excel file
        excel_data = combined_df.to_excel(index=False)
        
        # Return the Excel file as a response
        response = HttpResponse(excel_data, content_type='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')
        response['Content-Disposition'] = 'attachment; filename=combined_data.xlsx'
        return response
