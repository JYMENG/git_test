# Load the required module
# Install-Module -Name ImportExcel -Scope CurrentUser -Force
# If Excel not available, use CSV (see notes below)

$inputFile = "C:\Path\To\Your\Groups.xlsx"  # Adjust path
$csvOutput = "C:\Temp\AllMembers_WithPaths.csv"  # Adjust export path

# Read Excel file with GroupName and ServerName columns
$groups = Import-Excel -Path $inputFile

# Recursive function to retrieve members
function Get-ADGroupRecursiveMembers {
    param (
        [string]$GroupDN,
        [string]$Server,
        [System.Collections.Generic.HashSet[string]]$VisitedGroups,
        [string[]]$PathSoFar
    )

    if ($VisitedGroups.Contains($GroupDN)) {
        return
    }
    $VisitedGroups.Add($GroupDN)

    try {
        $group = Get-ADGroup -Identity $GroupDN -Server $Server -Properties Members
    } catch {
        Write-Warning "Group not found or inaccessible: $GroupDN"
        return
    }

    foreach ($memberDN in $group.Members) {
        try {
            $member = Get-ADObject -Identity $memberDN -Server $Server -Properties objectClass,sAMAccountName,mail
            if ($member.objectClass -eq "group") {
                # Recurse into nested group
                Get-ADGroupRecursiveMembers -GroupDN $memberDN -Server $Server -VisitedGroups $VisitedGroups -PathSoFar ($PathSoFar + $GroupDN)
            } else {
                # Return member object
                [PSCustomObject]@{
                    GroupPath      = ($PathSoFar + $GroupDN) -join " -> "
                    MemberDN       = $memberDN
                    ObjectType     = $member.objectClass
                    sAMAccountName = $member.sAMAccountName
                    Email          = $member.mail
                }
            }
        } catch {
            Write-Warning "Skipping inaccessible or external member (e.g. FSP): $memberDN"
        }
    }
}

# Result storage
$allResults = @()

foreach ($entry in $groups) {
    $groupName  = $entry.GroupName
    $serverName = $entry.ServerName

    try {
        $rootGroup = Get-ADGroup -Identity $groupName -Server $serverName
        $visited   = New-Object 'System.Collections.Generic.HashSet[string]'
        $members   = Get-ADGroupRecursiveMembers -GroupDN $rootGroup.DistinguishedName -Server $serverName -VisitedGroups $visited -PathSoFar @()

        if ($members) {
            $allResults += $members
        } else {
            Write-Warning "No members found for group: $groupName"
        }
    } catch {
        Write-Warning "Failed to get root group: $groupName on $serverName"
    }
}

Write-Host "Total members collected: $($allResults.Count)"

# Export results to CSV
$allResults | Export-Csv -Path $csvOutput -NoTypeInformation -Encoding UTF8
Write-Host "Export complete: $csvOutput"