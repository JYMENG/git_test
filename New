=import os
import polars as pl

# Configuration
input_folder = "path_to_your_folder"  # Change to your folder path
output_csv = "merged_output.csv"
batch_size = 50_000  # Process 50,000 rows at a time

# Debug: Start process
print(f"Scanning folder: {input_folder}")

# Get all `.xlsx` files in the folder
excel_files = [f for f in os.listdir(input_folder) if f.endswith(".xlsx")]
print(f"Found {len(excel_files)} Excel files.")

header_saved = False  # Track if header has been written
total_rows = 0  # Track total rows processed

for file in excel_files:
    file_path = os.path.join(input_folder, file)
    print(f"\nProcessing file: {file}")

    try:
        # Read all sheet names first
        xls = pl.read_excel(file_path, sheet_id=0, metadata=True)
        sheets = xls["sheets"]
        print(f"  Found {len(sheets)} sheets: {sheets}")

        for sheet in sheets:
            if "SQL" in sheet:  # Skip sheets containing "SQL"
                print(f"  Skipping sheet (contains 'SQL'): {sheet}")
                continue

            print(f"  Reading sheet: {sheet}")

            # Read in batches
            df_iter = pl.read_excel(file_path, sheet_name=sheet, dtype=str, chunk_size=batch_size)

            for df in df_iter:
                # Add metadata columns
                df = df.with_columns([
                    pl.lit(file).alias("File_Name"),
                    pl.lit(sheet).alias("Sheet_Name"),
                    pl.arange(1, df.height + 1).alias("Row_Number")
                ])

                # Save to CSV in append mode
                df.write_csv(output_csv, separator="|", include_header=not header_saved, append=True)
                header_saved = True
                total_rows += df.height
                print(f"    Processed {total_rows} rows so far...")

    except Exception as e:
        print(f"  ERROR processing file {file}: {e}")

print(f"\nFinal merged row count: {total_rows}")
print(f"Merged file saved as {output_csv}")