import os
import pandas as pd

# Configuration
input_folder = "path_to_your_folder"  # Change to your folder path
output_csv = "merged_output.csv"
batch_size = 50_000  # Process in chunks

# Debug: Start process
print(f"Scanning folder: {input_folder}")

# Get all `.xlsx` files in the folder
excel_files = [f for f in os.listdir(input_folder) if f.endswith(".xlsx")]
print(f"Found {len(excel_files)} Excel files.")

header_saved = False  # Ensures only the first tab of the first file has a header
total_rows = 0  # Track total rows processed

for file_idx, file in enumerate(excel_files):
    file_path = os.path.join(input_folder, file)
    print(f"\nProcessing file: {file}")

    try:
        # Read all sheet names
        xls = pd.ExcelFile(file_path)
        sheets = xls.sheet_names
        print(f"  Found {len(sheets)} sheets: {sheets}")

        for sheet_idx, sheet in enumerate(sheets):
            if "SQL" in sheet:  # Skip sheets containing "SQL"
                print(f"  Skipping sheet (contains 'SQL'): {sheet}")
                continue

            print(f"  Reading sheet: {sheet}")

            # Read in chunks
            chunk_iter = pd.read_excel(file_path, sheet_name=sheet, dtype=str, chunksize=batch_size)

            for df in chunk_iter:
                # Add metadata columns
                df.insert(0, "File_Name", file)
                df.insert(1, "Sheet_Name", sheet)
                df.insert(2, "Row_Number", range(1, len(df) + 1))

                # Determine if header should be written
                write_header = not header_saved and sheet_idx == 0 and file_idx == 0

                # Save to CSV in append mode
                df.to_csv(output_csv, sep="|", index=False, quoting=1, mode="a", header=write_header)
                
                if write_header:
                    header_saved = True  # Ensure future writes do not include headers

                total_rows += len(df)
                print(f"    Processed {total_rows} rows so far...")

    except Exception as e:
        print(f"  ERROR processing file {file}: {e}")

print(f"\nFinal merged row count: {total_rows}")
print(f"Merged file saved as {output_csv}")