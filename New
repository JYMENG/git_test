$inputFile = "C:\Path\To\Your\Groups.xlsx"
$outputFile = "C:\Temp\AllMembers_WithPaths.csv"

# Read the Excel file
$groups = Import-Excel -Path $inputFile

# Recursive function that returns a list of member objects
function Get-ADGroupRecursiveMembers {
    param (
        [string]$GroupDN,
        [string]$Server,
        [System.Collections.Generic.HashSet[string]]$VisitedGroups,
        [string[]]$PathSoFar
    )

    $results = @()

    if ($VisitedGroups.Contains($GroupDN)) {
        return $results
    }
    $VisitedGroups.Add($GroupDN)

    try {
        $group = Get-ADGroup -Identity $GroupDN -Server $Server -Properties Members
    } catch {
        Write-Warning "Cannot find or access group: $GroupDN"
        return $results
    }

    foreach ($memberDN in $group.Members) {
        try {
            $member = Get-ADObject -Identity $memberDN -Server $Server -Properties objectClass, sAMAccountName, mail
            if ($member.objectClass -eq "group") {
                $nestedResults = Get-ADGroupRecursiveMembers -GroupDN $memberDN -Server $Server -VisitedGroups $VisitedGroups -PathSoFar ($PathSoFar + $GroupDN)
                $results += $nestedResults
            } else {
                $results += [PSCustomObject]@{
                    GroupPath      = ($PathSoFar + $GroupDN) -join " -> "
                    MemberDN       = $memberDN
                    ObjectType     = $member.objectClass
                    sAMAccountName = $member.sAMAccountName
                    Email          = $member.mail
                }
            }
        } catch {
            Write-Warning "Skipping member (probably foreign or inaccessible): $memberDN"
        }
    }

    return $results
}

# Collect all members from all groups
$allResults = @()

foreach ($entry in $groups) {
    $groupName = $entry.GroupName
    $serverName = $entry.ServerName

    try {
        $rootGroup = Get-ADGroup -Identity $groupName -Server $serverName
        $visited = New-Object 'System.Collections.Generic.HashSet[string]'
        $members = Get-ADGroupRecursiveMembers -GroupDN $rootGroup.DistinguishedName -Server $serverName -VisitedGroups $visited -PathSoFar @()

        if ($members.Count -gt 0) {
            $allResults += $members
        } else {
            Write-Warning "No members found under group: $groupName"
        }
    } catch {
        Write-Warning "Failed to get root group: $groupName on $serverName"
    }
}

# Export results
if ($allResults.Count -gt 0) {
    $allResults | Export-Csv -Path $outputFile -NoTypeInformation -Encoding UTF8
    Write-Host "✅ Export complete: $outputFile"
} else {
    Write-Warning "❌ No members found in any group — nothing to export"
}