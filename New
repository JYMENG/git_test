import pandas as pd
import numpy as np

# Sample DataFrame with multiple keys and datetime columns
data = {
    "KEY1": ["A", "A", "A", "B", "B"],
    "KEY2": [1, 1, 1, 2, 2],
    "D1": ["2025-01-01", "2025-01-05", "2025-01-10", "2025-01-01", "2025-01-05"],
    "D2": ["2025-01-03", None, "2025-01-12", "2025-01-02", "2025-01-06"],
    "D3": ["2025-01-02", "2025-01-07", "2025-01-11", "2025-01-02", "2025-01-05"],
}
df = pd.DataFrame(data)

# Convert date columns to datetime
df["D1"] = pd.to_datetime(df["D1"])
df["D2"] = pd.to_datetime(df["D2"], errors="coerce")
df["D3"] = pd.to_datetime(df["D3"])

# Sort DataFrame by KEY1, KEY2, and D1
df = df.sort_values(by=["KEY1", "KEY2", "D1"])

# Define the current date
current_date = pd.Timestamp.now()

# Function to calculate business days between two dates
def calculate_business_days(start, end):
    if pd.isna(start) or pd.isna(end):
        return np.nan
    return np.busday_count(start.date(), end.date())

# Apply logic for calculating the columns
def calculate_columns(group):
    result = []
    for i, row in group.iterrows():
        # Calculate for All Records: D2 - D3 or if D2 is NaT, use current date - D3
        if pd.isna(row["D2"]):
            days_diff = calculate_business_days(row["D3"], current_date)
        else:
            days_diff = calculate_business_days(row["D2"], row["D3"])
        
        result.append({
            "D2_minus_D3": days_diff
        })
    
    # Add the calculated results back to the group
    result_df = pd.DataFrame(result)
    group = pd.concat([group, result_df], axis=1)
    
    return group

# Apply the calculation for each group (KEY1, KEY2)
df = df.groupby(["KEY1", "KEY2"]).apply(calculate_columns)

print(df)