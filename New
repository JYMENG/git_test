Import-Module ActiveDirectory
Import-Module ImportExcel

# Load Excel with columns: GroupName | Server
$groups = Import-Excel -Path "groups.xlsx"
$allUsers = @()

# Recursive function defined outside the loop
function Get-GroupUsersRecursive {
    param (
        [string]$GroupName,
        [string]$Server,
        [hashtable]$seenGroups
    )

    if ($seenGroups.ContainsKey($GroupName)) { return }
    $seenGroups[$GroupName] = $true

    try {
        $members = Get-ADGroupMember -Identity $GroupName -Server $Server -ErrorAction Stop
    } catch {
        Write-Warning "‚ùå Cannot get members of $GroupName: $_"
        return
    }

    foreach ($member in $members) {
        $dn = $member.DistinguishedName
        $entry = [PSCustomObject]@{
            Group             = $GroupName
            Server            = $Server
            Name              = $member.Name
            ObjectClass       = $member.ObjectClass
            SamAccountName    = ''
            Email             = ''
            DistinguishedName = $dn
            Note              = ''
        }

        # Skip foreign/trusted objects
        if ($dn -like '*CN=ForeignSecurityPrincipals*') {
            $entry.Note = "‚ö†Ô∏è External object (ForeignSecurityPrincipal)"
            $script:allUsers += $entry
            continue
        }

        if ($member.objectClass -eq 'user') {
            try {
                $user = Get-ADUser -Identity $dn -Server $Server -Properties EmailAddress
                $entry.SamAccountName = $user.SamAccountName
                $entry.Email = $user.EmailAddress
            } catch {
                $entry.Note = "‚ö†Ô∏è Cannot resolve user"
            }
        } elseif ($member.objectClass -eq 'group') {
            # Recurse
            Get-GroupUsersRecursive -GroupName $member.Name -Server $Server -seenGroups $seenGroups
            continue
        } else {
            $entry.Note = "‚ö†Ô∏è Unknown or unsupported object class: $($member.objectClass)"
        }

        $script:allUsers += $entry
    }
}

# Loop through each group in Excel
foreach ($row in $groups) {
    $groupName = $row.GroupName
    $server = $row.Server

    if (-not $groupName -or -not $server) {
        Write-Warning "‚ö†Ô∏è Skipping row with missing GroupName or Server."
        continue
    }

    Write-Host "üîç Processing group '$groupName' on server '$server'"

    $seenGroups = @{}
    Get-GroupUsersRecursive -GroupName $groupName -Server $server -seenGroups $seenGroups
}

# Export to CSV
$allUsers | Export-Csv -Path "AD_Users_Recursive_WithNotes.csv" -NoTypeInformation
Write-Host "‚úÖ Export complete: AD_Users_Recursive_WithNotes.csv"