import pandas as pd
import numpy as np
from datetime import datetime

# Sample data
data = {
    "KEY1": ["A", "A", "A", "B", "B"],
    "KEY2": ["X", "X", "X", "Y", "Y"],
    "D1": ["2025-01-01", "2025-01-02", "2025-01-03", "2025-01-01", "2025-01-02"],
    "D2": ["2025-01-02", "2025-01-03", None, "2025-01-02", None],
    "D3": ["2025-01-01", "2025-01-01", "2025-01-01", "2025-01-01", "2025-01-01"],
}

df = pd.DataFrame(data)

# Convert to datetime
df["D1"] = pd.to_datetime(df["D1"])
df["D2"] = pd.to_datetime(df["D2"])
df["D3"] = pd.to_datetime(df["D3"])

# Add current date
current_date = pd.Timestamp(datetime.now())

# Column 1: All Records
df["Col1"] = (df["D2"].fillna(current_date) - df["D3"]).dt.days

# Column 2: Between Records for KEY1 and KEY2
def calculate_col2(group):
    group = group.sort_values("D1").reset_index(drop=True)
    n = len(group)
    
    col2 = []
    for i in range(n):
        if n == 1:  # Only one record
            col2.append((group.loc[i, "D2"] or current_date - group.loc[i, "D3"]).days)
        elif i == n - 1:  # Last record
            col2.append((group.loc[i, "D2"] - group.loc[i, "D1"]).days)
        else:  # Intermediate records
            col2.append((group.loc[i + 1, "D1"] - group.loc[i, "D1"]).days)
    
    group["Col2"] = col2
    return group

df = df.groupby(["KEY1", "KEY2"]).apply(calculate_col2)

# Result
print(df)