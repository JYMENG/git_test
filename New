import pandas as pd
from sqlalchemy import create_engine, inspect
from datetime import datetime, timedelta

# === CONFIGURATION ===
table_names = ['table1', 'table2', 'table3']  # Replace with your actual table names
date_column = 'date_column'  # Replace with your actual date column name
output_data_file = 'weekly_data.xlsx'
output_schema_file = 'table_schemas.xlsx'

# Create SQLAlchemy engine (change for your DB)
# Examples:
# SQLite:      engine = create_engine('sqlite:///your_database.db')
# PostgreSQL:  engine = create_engine('postgresql://user:password@localhost/dbname')
engine = create_engine('sqlite:///your_database.db')

# Date range for last 7 days
end_date = datetime.today()
start_date = end_date - timedelta(days=7)

# === FETCH WEEKLY DATA ===
with pd.ExcelWriter(output_data_file, engine='openpyxl') as writer:
    for table in table_names:
        query = f"""
            SELECT * FROM {table}
            WHERE {date_column} BETWEEN '{start_date.date()}' AND '{end_date.date()}'
        """
        try:
            df = pd.read_sql_query(query, con=engine)
            df.to_excel(writer, sheet_name=table[:31], index=False)
        except Exception as e:
            print(f"[Data Error] {table}: {e}")

# === OUTPUT SCHEMA / STRUCTURE ===
inspector = inspect(engine)

with pd.ExcelWriter(output_schema_file, engine='openpyxl') as writer:
    for table in table_names:
        try:
            columns = inspector.get_columns(table)
            schema_df = pd.DataFrame([{
                'name': col['name'],
                'type': str(col['type']),
                'nullable': col['nullable'],
                'default': col.get('default')
            } for col in columns])
            schema_df.to_excel(writer, sheet_name=table[:31], index=False)
        except Exception as e:
            print(f"[Schema Error] {table}: {e}")